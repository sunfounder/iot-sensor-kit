.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_pir_motion:

PIR-Bewegungsmelder-Modul (HC-SR501)
=====================================

.. image:: img/13_pir_module.png
    :width: 300
    :align: center

Einleitung
---------------------------
Der Passive Infrarot (PIR) Bewegungsmelder ist ein Sensor zur Erfassung von Bewegungen. Er findet h√§ufig Einsatz in Sicherheitssystemen und automatischen Beleuchtungsanlagen. Der Sensor besitzt zwei Schlitze, die Infrarotstrahlung erkennen. Passiert ein Objekt, etwa eine Person, den Erfassungsbereich des Sensors, so registriert dieser eine Ver√§nderung der Infrarotstrahlung und l√∂st ein Ausgangssignal aus.

Funktionsprinzip
---------------------------
Der PIR-Sensor ist in zwei Schlitze unterteilt, die mit einem Differenzverst√§rker verbunden sind. Wenn ein station√§res Objekt vor dem Sensor ist, empfangen beide Schlitze dieselbe Menge an Strahlung, und der Ausgang bleibt neutral. Bewegt sich jedoch ein Objekt vor dem Sensor, nimmt einer der Schlitze mehr Strahlung auf als der andere, was zu Schwankungen im Ausgangssignal f√ºhrt. Diese Ver√§nderung der Ausgangsspannung ist ein Indikator f√ºr erkannte Bewegung.

.. image:: img/13_pir_working_principle.jpg
    :width: 500
    :align: center

Nach der Verkabelung des Sensormoduls erfolgt eine einmin√ºtige Initialisierung. W√§hrend dieser Zeit kann das Modul 0 bis 3-mal in Abst√§nden ein Signal ausgeben. Danach geht das Modul in den Standby-Modus. Um Fehlbedienungen durch st√∂rende Signale zu vermeiden, sollte der Sensor von Lichtquellen und anderen St√∂reinfl√ºssen ferngehalten werden. Am besten wird der Sensor in einer windgesch√ºtzten Umgebung eingesetzt, da auch Wind die Sensorik beeintr√§chtigen kann.

.. image:: img/13_pir_module_back.png
    :width: 350
    :align: center

.. raw:: html
    
    <br/><br/> 

Reichweiteneinstellung
^^^^^^^^^^^^^^^^^^^^^^^^
Durch Drehen des Potentiometers f√ºr die Reichweiteneinstellung im Uhrzeigersinn wird die Erfassungsreichweite erh√∂ht, mit einem Maximalbereich von etwa 0-7 Metern. Dreht man es gegen den Uhrzeigersinn, verringert sich die Reichweite auf etwa 0-3 Meter.

Verz√∂gerungseinstellung
^^^^^^^^^^^^^^^^^^^^^^^^
Dreht man das Potentiometer f√ºr die Verz√∂gerungseinstellung im Uhrzeigersinn, erh√∂ht sich die Verz√∂gerungszeit. Die maximale Verz√∂gerungszeit kann bis zu 300 Sekunden betragen. In entgegengesetzter Richtung verringert sich die Verz√∂gerung auf ein Minimum von 5 Sekunden.

Zwei Trigger-Modi
^^^^^^^^^^^^^^^^^^^^^^^^
Durch Verwendung einer Jumperkappe k√∂nnen verschiedene Modi ausgew√§hlt werden.

* H: Wiederholbarer Trigger-Modus. Nach der Erfassung einer Bewegung gibt das Modul ein hohes Signal aus. W√§hrend der anschlie√üenden Verz√∂gerungszeit bleibt das Ausgangssignal bei erneuter Bewegungserkennung hoch.
* L: Nicht wiederholbarer Trigger-Modus. Nach der Erfassung einer Bewegung gibt das Modul ein hohes Signal aus, das nach Ablauf der Verz√∂gerungszeit automatisch auf ein niedriges Niveau zur√ºckf√§llt.

Anwendungsbeispiele
---------------------------

**Hardware-Komponenten**

- Arduino Uno R4 oder R3 Platine * 1
- PIR-Bewegungsmelder-Modul * 1
- Jumperkabel


**Schaltungsaufbau**

.. note::
    Die Pin-Markierungen sind durch die Fresnel-Linse verdeckt. Zum Ansehen kann diese ge√∂ffnet werden.

.. image:: img/13_pir_module_circuit.png
    :width: 400
    :align: center

.. raw:: html
    
    <br/><br/>   

Programmcode 
^^^^^^^^^^^^^^^^^^^^

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/4a9b7041-dac5-4d8a-8941-fa0d2d6313d8/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/video/basic/13-component_pir_motion.mp4"  type="video/mp4">
      Ihr Browser unterst√ºtzt das Video-Tag nicht.
   </video>
   <br/><br/>  

Code-Erkl√§rung
^^^^^^^^^^^^^^^^^^^^

1. Einrichten des PIR-Sensor-Pins. Der Pin f√ºr den PIR-Sensor wird als Pin 2 definiert.

   .. code-block:: arduino

      const int pirPin = 2;
      int state = 0;

2. Initialisierung des PIR-Sensors. In der ``setup()`` Funktion wird der Pin des PIR-Sensors als Eingang definiert. Dadurch kann der Arduino den Status des PIR-Sensors lesen.

   .. code-block:: arduino

      void setup() {
        pinMode(pirPin, INPUT);
        Serial.begin(9600);
      }

3. Auslesen des PIR-Sensors und Anzeige der Ergebnisse. In der ``loop()`` Funktion wird der Status des PIR-Sensors kontinuierlich ausgelesen. 

   .. code-block:: arduino

      void loop() {
        state = digitalRead(pirPin);
        if (state == HIGH) {
          Serial.println("Somebody here!");
        } else {
          Serial.println("Monitoring...");
          delay(100);
        }
      }

   Wenn der Status ``HIGH`` ist, also eine Bewegung erkannt wird, erscheint die Meldung "Somebody here!" im seriellen Monitor. Andernfalls wird "Monitoring..." angezeigt.

Weitere Ideen
^^^^^^^^^^^^^^^^^^^^

- Einbindung einer LED, die bei erkannter Bewegung aufleuchtet oder blinkt. Dies bietet eine visuelle R√ºckmeldung zus√§tzlich zur Nachricht im seriellen Monitor.
- Integration eines Summers, der bei Bewegungserkennung einen Alarmton ausgibt.

Weitere Projekte
---------------------------
* :ref:`fun_motion_triggered_relay`
* :ref:`iot_Intrusion_alert_system`

