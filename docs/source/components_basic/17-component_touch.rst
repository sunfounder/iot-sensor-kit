
.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_touch:

Ber√ºhrungs-Sensormodul
==========================

.. image:: img/17_touch_sensor_moudle.png
    :width: 200
    :align: center

Einf√ºhrung
---------------------------
Der Ber√ºhrungsschalter (auch Touch-Button oder Touch-Schalter genannt) findet breite Anwendung in verschiedenen Ger√§ten, wie beispielsweise ber√ºhrungsempfindlichen Lampen. Er √ºbernimmt dieselben Funktionen wie ein herk√∂mmlicher Knopf, verleiht dem Produkt jedoch ein sauberes, modernes Erscheinungsbild.

Funktionsprinzip
---------------------------
Das Modul basiert auf einem Ber√ºhrungssensor-IC (TTP223B) und fungiert als kapazitiver Touch-Schalter. Im Ruhezustand gibt das Modul ein niedriges Signal bei geringem Stromverbrauch aus. Bei Ber√ºhrung wechselt das Ausgangssignal auf ein hohes Niveau und kehrt nach Loslassen des Fingers wieder auf ein niedriges Niveau zur√ºck.

Funktionsweise des kapazitiven Touch-Schalters:

Der kapazitive Touch-Schalter besteht aus verschiedenen Schichten ‚Äì einer oberen Isolierschicht, gefolgt von der Ber√ºhrungsplatte, einer weiteren Isolierschicht und schlie√ülich einer Erdungsplatte.

.. image:: img/17_touch_sensor_moudle_principle.jpeg
    :width: 400
    :align: center

In der Praxis kann ein kapazitiver Sensor auf einer doppelseitigen Leiterplatte realisiert werden, wobei eine Seite als Sensorfl√§che und die gegen√ºberliegende Seite als Erdungsplatte dient. Bei angelegter Spannung laden sich beide Platten auf. Im Gleichgewicht entspricht die Spannung der Platten der des Stromnetzes.

Der Detektorschaltkreis beinhaltet einen Oszillator, dessen Frequenz von der Kapazit√§t der Sensorfl√§che abh√§ngt. N√§hert sich ein Finger der Sensorfl√§che, ver√§ndert die zus√§tzliche Kapazit√§t die Frequenz des internen Oszillators. Der Detektorschaltkreis √ºberwacht in festgelegten Intervallen die Oszillatorfrequenz und l√∂st bei √úberschreiten eines bestimmten Schwellenwerts ein Tastendruckereignis aus.

Anwendungsbeispiele
---------------------------

**Hardware-Komponenten**

- Arduino Uno R4 oder R3 Board * 1
- Ber√ºhrungs-Sensormodul * 1
- Jumperkabel


**Schaltungsaufbau**

.. image:: img/17_touch_sensor_moudle_circuit.png
    :width: 400
    :align: center

.. raw:: html
    
    <br/><br/>   

Programmcode
^^^^^^^^^^^^^^^^^^^^

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/3a0a411f-7bdc-43f0-82e9-5978e4167dd7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/video/basic/17-component_touch.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>
   <br/><br/>  

Code-Erkl√§rung
^^^^^^^^^^^^^^^^^^^^

#. Definition der ben√∂tigten Variablen. Zun√§chst wird die Pinnummer definiert, an die der Ber√ºhrungssensor angeschlossen ist.

   .. code-block:: arduino

      const int sensorPin = 7;

#. Initialisierung in der ``setup()``-Funktion. Hier legen wir fest, dass der Sensor-Pin f√ºr den Eingang und die integrierte LED f√ºr den Ausgang genutzt werden. Zudem wird die serielle Kommunikation gestartet, um Nachrichten an den seriellen Monitor zu senden.

   .. code-block:: arduino

      void setup() {
        pinMode(sensorPin, INPUT);
        pinMode(LED_BUILTIN, OUTPUT);
        Serial.begin(9600);
      }

#. Kontinuierlich √ºberpr√ºft das Arduino, ob der Ber√ºhrungssensor aktiviert ist. Bei Ber√ºhrung leuchtet die LED auf und eine Meldung "Touch detected!" wird ausgegeben. Ist keine Ber√ºhrung vorhanden, wird die LED ausgeschaltet und die Meldung "No touch detected..." erscheint. Eine Verz√∂gerung verhindert, dass der Sensor zu schnell abgefragt wird.

   .. code-block:: arduino

      void loop() {
        if (digitalRead(sensorPin) == 1) {
          digitalWrite(LED_BUILTIN, HIGH);
          Serial.println("Touch detected!");
        } else {
          digitalWrite(LED_BUILTIN, LOW);
          Serial.println("No touch detected...");
        }
        delay(100);
      }

Weitere Ideen
^^^^^^^^^^^^^^^^^^^^

- Verwendung unterschiedlicher LED-Farben zur Anzeige einer Ber√ºhrung
- Der Ber√ºhrungssensor k√∂nnte auch zur Steuerung komplexerer Elemente wie einem Motor oder einem Relais verwendet werden.

Weitere Projekte
---------------------------
* :ref:`fun_touch_toggle_light`

