.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_soil:

Kapazitives Bodenfeuchtigkeitsmodul
===================================

.. image:: img/10_soil_mositure_module.png
    :width: 600
    :align: center

Einf√ºhrung
----------

Das Bodenfeuchtigkeitsmodul ist ein Sensor zur Messung des Feuchtigkeitsgehalts von Erde. Es findet insbesondere in der Landwirtschaft Anwendung, um den Feuchtigkeitszustand des Bodens zu √ºberwachen und Landwirten eine bessere Bew√§sserungsplanung zu erm√∂glichen.

Funktionsprinzip
----------------

Im Gegensatz zu den meisten resistiven Sensoren, die derzeit auf dem Markt erh√§ltlich sind, basiert dieses kapazitive Bodenfeuchtigkeitsmodul auf dem Prinzip der kapazitiven Induktion. Dadurch wird das Problem der Korrosionsanf√§lligkeit, das bei resistiven Sensoren auftritt, effektiv umgangen, was die Lebensdauer des Sensors erheblich verl√§ngert.

Der Sensor besteht aus korrosionsbest√§ndigen Materialien und bietet eine ausgezeichnete Langlebigkeit. Einfach in die Erde neben den Pflanzen einstecken und die Bodenfeuchtigkeit in Echtzeit √ºberwachen. Das Modul enth√§lt einen integrierten Spannungsregler und arbeitet in einem Spannungsbereich von 3,3 bis 5,5 V, wodurch es f√ºr Mikrocontroller mit 3,3 V und 5 V Versorgungsspannung ideal ist.

Die Hardware-Schaltung des kapazitiven Bodenfeuchtigkeitssensors ist unten dargestellt.

.. image:: img/10_solid_schematic.png
    :width: 500
    :align: center

Der Sensor verf√ºgt √ºber einen festfrequenten Oszillator, der mit einem 555-Timer-IC realisiert ist. Das generierte Rechtecksignal wird dem Sensor zugef√ºhrt, der als Kondensator wirkt. Das Signal durchl√§uft eine Reaktanz, die in Kombination mit einem rein ohmschen Widerstand (10k Widerstand am Pin 3) einen Spannungsteiler bildet.

Je h√∂her die Bodenfeuchtigkeit, desto gr√∂√üer ist die Kapazit√§t des Sensors. Dadurch verringert sich die Reaktanz des Rechtecksignals, was die Spannung auf der Signalleitung reduziert und den Analogeingangswert am Mikrocontroller entsprechend verkleinert.

Anwendungsbeispiele
--------------------

**Ben√∂tigte Hardware-Komponenten**

- Arduino Uno R4 oder R3 Board * 1
- Bodenfeuchtigkeitsmodul * 1
- Jumperkabel

**Schaltungsaufbau**

.. image:: img/10_soil_mositure_module_circuit.png
    :width: 400
    :align: center

.. raw:: html
    
    <br/><br/>   

Programmcode 
^^^^^^^^^^^^^^^^

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/47eddacd-6e47-422b-968f-bdd37dc77015/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/video/basic/10-component_soil.mp4"  type="video/mp4">
      Ihr Browser unterst√ºtzt das Video-Tag nicht.
   </video>
   <br/><br/>  

Codeerkl√§rung
^^^^^^^^^^^^^

1. Definition des Sensorpins:

.. code-block:: arduino

    const int sensorPin = A0;

In diesem Codeabschnitt wird eine Konstante mit dem Namen `sensorPin` definiert und dem Wert A0 zugewiesen, der dem analogen Eingangspin auf dem Arduino-Board entspricht, an den der Bodenfeuchtigkeitssensor angeschlossen ist.

2. Initialisierung der seriellen Kommunikation:

.. code-block:: arduino

    void setup() {
      Serial.begin(9600);
    }

Die Funktion ``setup()`` wird einmal aufgerufen, wenn der Arduino eingeschaltet oder zur√ºckgesetzt wird. Hier initialisieren wir die serielle Kommunikation mit einer Baudrate von 9600.

3. Daten lesen und auf dem seriellen Monitor ausgeben:

.. code-block:: arduino

    void loop() {
      Serial.println(analogRead(sensorPin));
      delay(500);
    }

In der `loop()`-Funktion wird die Hauptlogik des Programms ausgef√ºhrt. Diese Schleife l√§uft ununterbrochen, sobald das Programm gestartet ist. Wir verwenden die Funktion ``analogRead()``, um die Daten vom Feuchtigkeitssensor zu lesen und sie auf dem seriellen Monitor auszugeben. Anschlie√üend wird das Programm f√ºr 500 Millisekunden pausiert, bevor der n√§chste Wert erfasst wird.

.. note:: 
    
    Je kleiner der Wert, desto h√∂her ist der Feuchtigkeitsgehalt im Boden.

Weitere Ideen
^^^^^^^^^^^^^

- Integration eines Buzzers oder einer LED, die aktiviert wird, wenn der Feuchtigkeitswert unter einen bestimmten Schwellenwert f√§llt. So erhalten Sie einen physischen Hinweis, wann es Zeit ist, Ihre Pflanzen zu gie√üen.
- Automatisierung des Bew√§sserungsprozesses durch Anschluss einer Wasserpumpe. F√§llt die Bodenfeuchtigkeit unter einen bestimmten Wert, kann der Arduino die Pumpe aktivieren, um die Pflanzen zu bew√§ssern.

Weitere Projekte
----------------
* :ref:`iot_Plant_monitor`
* :ref:`iot_Auto_watering_system`
